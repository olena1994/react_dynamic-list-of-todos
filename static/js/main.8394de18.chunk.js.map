{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","searchOfTitle","selectStatus","filterHandler","event","target","name","value","setState","compareText","title","toLowerCase","includes","filterBySelect","todos","filter","completed","getVisibleTodos","visibleTodos","this","props","selectedUserId","selectOfUser","className","type","placeholder","onChange","map","visibleTodo","cn","checked","readOnly","userId","onClick","id","React","Component","BASE_URL","getTodos","a","fetch","response","json","getUserById","user","CurrentUser","userLoadError","getCurrentUser","currentUser","prevProps","clearUser","email","phone","App","selectUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8394de18.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport cn from 'classnames';\n\ntype Props = {\n  selectedUserId: number,\n  todos: Todo[];\n  selectOfUser: (userId: number) => void,\n};\n\ntype State = {\n  searchOfTitle: string,\n  selectStatus: string,\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state = {\n    searchOfTitle: '',\n    selectStatus: 'all',\n  };\n\n  filterHandler = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  compareText = (title: string, searchOfTitle: string) => {\n    return title.toLowerCase().includes(searchOfTitle.toLowerCase());\n  };\n\n  filterBySelect = (todos: Todo[], selectStatus: string) => {\n    switch (selectStatus) {\n      case 'completed':\n        return todos.filter(({ completed }) => completed);\n      case 'not-completed':\n        return todos.filter(({ completed }) => !completed);\n      default:\n        return todos;\n    }\n  };\n\n  getVisibleTodos = (todos: Todo[]) => {\n    const { searchOfTitle, selectStatus } = this.state;\n\n    const visibleTodos = todos\n      .filter(({ title }) => this.compareText(title, searchOfTitle));\n\n    return this.filterBySelect(visibleTodos, selectStatus);\n  };\n\n  render() {\n    const { selectedUserId, todos, selectOfUser } = this.props;\n    const { searchOfTitle, selectStatus } = this.state;\n\n    const visibleTodos = this.getVisibleTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            name=\"searchOfTitle\"\n            type=\"text\"\n            placeholder=\"Filter by title\"\n            value={searchOfTitle}\n            onChange={this.filterHandler}\n          />\n\n          <select\n            name=\"selectStatus\"\n            value={selectStatus}\n            onChange={this.filterHandler}\n          >\n            <option value=\"all\">\n              select all\n            </option>\n            <option value=\"completed\">\n              select completed\n            </option>\n            <option value=\"not-completed\">\n              select not completed\n            </option>\n          </select>\n\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(visibleTodo => (\n              <li\n                key={visibleTodo.id}\n                className={cn(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--checked': visibleTodo.completed,\n                    'TodoList__item--unchecked': !visibleTodo.completed,\n                  },\n                )}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={visibleTodo.completed}\n                  readOnly\n                />\n                <p>{visibleTodo.title}</p>\n\n                <button\n                  className={cn(\n                    'button',\n                    'TodoList__user-button',\n                    { 'TodoList__user-button--selected': selectedUserId === visibleTodo.userId },\n                  )}\n                  type=\"button\"\n                  onClick={() => selectOfUser(visibleTodo.userId)}\n                >\n                  {`User #${visibleTodo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async () => {\n  const response = await fetch(`${BASE_URL}/todos`);\n  const todos: Todo[] = await response.json();\n\n  return todos;\n};\n\nexport const getUserById = async (userId: number) => {\n  const response = await fetch(`${BASE_URL}/users/${userId}`);\n  const user = await response.json();\n\n  return user;\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUserById } from '../../api/api';\n\ntype Props = {\n  userId: number,\n  clearUser: () => void,\n};\n\ntype State = {\n  user: User | null,\n  userLoadError: boolean,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n    userLoadError: false,\n  };\n\n  async componentDidMount() {\n    await this.getCurrentUser();\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (this.props.userId !== prevProps.userId) {\n      await this.getCurrentUser();\n    }\n  }\n\n  getCurrentUser = async () => {\n    try {\n      const currentUser = await getUserById(this.props.userId);\n\n      this.setState({\n        user: currentUser,\n        userLoadError: false,\n      });\n    } catch {\n      this.setState({\n        user: null,\n        userLoadError: true,\n      });\n    }\n  };\n\n  render() {\n    const { user, userLoadError } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      (user && !userLoadError) ? (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>{`Selected user: ${user.id}`}</span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={clearUser}\n          >\n            Clear user\n          </button>\n        </div>\n      ) : (\n        'user load Error'\n      )\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\ntype State = {\n  todos: Todo[];\n  selectedUserId: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId: number) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  };\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  };\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={selectedUserId}\n            selectOfUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}